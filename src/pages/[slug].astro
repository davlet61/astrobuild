---
import Layout from '@/layouts/Page.astro';
import BlogPost from '@/components/Astro/BlogPost.astro';
import { getCollection } from 'astro:content';
import type { SeoProps } from '@/components/Astro/BaseHead.astro';
import type { InferGetStaticParamsType, InferGetStaticPropsType, GetStaticPaths } from 'astro';

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

export const getStaticPaths = (async () => {
  const posts = await getCollection('posts');
  const pages = await getCollection('pages');

  const filteredPosts = posts.map((post) => ({
    params: { slug: post.slug },
    props: { page: post },
  }));

  const filteredPages = pages
    .filter((page) => !['home'].includes(page.slug))
    .map((page) => ({
      params: { slug: page.slug },
      props: { page },
    }));

  return [...filteredPosts, ...filteredPages];
}) satisfies GetStaticPaths;

const { page } = Astro.props;

const redirect = page.data.redirect;
const shouldRedirect = redirect && redirect.discriminant !== 'none';
if (shouldRedirect) {
  return Astro.redirect(`/${redirect.value.redirectTo}`, redirect.value.statusCode);
}

const seo: SeoProps = {
  title: page.data.title,
  metaDescription: page.data.metaDescription || '',
  keywords: page.data.seoKeywords || '',
  image: page.data.featuredMedia?.discriminant === 'image' ? page.data.featuredMedia?.value.asset ?? '' : '',
};
---

<Layout seo={seo}>
  <BlogPost post={page} />
</Layout>
