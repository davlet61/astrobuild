---
import { ExpandableCard } from '../React/ExpandableCard';
import { parse } from 'node-html-parser/dist';

const { crop } = Astro.props;
const title = 'Example';
const image = '/assets/placeholder.jpg';
const cardId = crypto.randomUUID();

const content = await Astro.slots.render('default');

function parseContainerContent(htmlContent: string) {
  const root = parse(htmlContent);
  const title = root.querySelector('h3')?.textContent?.trim() || '';
  const img = root.querySelector('img');
  const image = img?.getAttribute('src') || '/assets/placeholder.jpg';
  const imageAlt = img?.getAttribute('alt') || title;
  const textNodes = root.querySelectorAll('p');
  const text = textNodes
    .map((node) => node.textContent)
    .join(' ')
    .trim();

  return { title, image, imageAlt, text };
}

const parsedContent = parseContainerContent(content);
---

{
  crop === 'wide' ? (
    <div class={`py-4 mx-auto w-full grid grid-cols-1 md:grid-cols-2 gap-4`}>
      <slot />
    </div>
  ) : crop === 'normal' ? (
    <>
      <ExpandableCard client:visible content={parsedContent} />
    </>
  ) : // <div
  //   class={`bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden transition-all duration-300 ease-in-out hover:shadow-lg hover:scale-[1.02]`}
  // >
  //   <div class="p-6">
  //     <slot />
  //   </div>
  // </div>
  crop === 'narrow' ? (
    <div class={`mx-auto max-w-3xl px-4 sm:px-6 lg:px-8`}>
      <slot />
    </div>
  ) : (
    <div class="mx-auto max-w-7xl px-6 md:px-12 xl:px-6">
      <slot />
    </div>
  )
}
