---
import '@/styles/globals.css';
import settings from '@/data/settings';
import type { ImageObject } from 'src/types';
import { getEntry } from 'astro:content';
import { extractImageUrls } from '@/lib/utils';

export interface SeoProps {
  title?: string;
  metaDescription?: string;
  keywords?: string;
  canonicalURL?: URL | string;
  image?: string | ImageObject;
  preloadCarouselImages?: boolean;
}

const title = Astro.props.title || settings.title;
const metaDescription = Astro.props.metaDescription || settings.description;
const keywords = Astro.props.keywords || settings.keywords;
const canonicalURL = Astro.props.canonicalURL || new URL(Astro.url.pathname, Astro.site);
const imgSrc = typeof Astro.props.image === 'string' ? Astro.props.image : Astro.props.image?.src;
const image = new URL(imgSrc || '/images/glass.png', Astro.site);

const homePage = await getEntry('pages', 'home');
const imageUrls = extractImageUrls(homePage.body);
---

<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1, viewport-fit=cover" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={metaDescription} />
<meta name="keywords" content={keywords} />
<!-- sitemap -->
<link rel="sitemap" href="/sitemap-index.xml" />

<!-- Preload images -->
{Astro.props.preloadCarouselImages && imageUrls.map((url) => <link rel="preload" href={url.src} as="image" />)}

<!-- Canonical -->
<link rel="canonical" href={canonicalURL} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={canonicalURL} />
<meta property="og:title" content={title} />
<meta property="og:description" content={metaDescription} />
<meta property="og:image" content={image} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={canonicalURL} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={metaDescription} />
<meta property="twitter:image" content={image} />

<!-- Cookie Consent -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/orestbida/cookieconsent@3.0.1/dist/cookieconsent.css" />

<!-- Google Fonts -->
<!-- <link rel="preconnect" href="https://fonts.googleapis.com" />
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
<link rel="preload" href="https://fonts.googleapis.com/icon?family=Material+Icons" as="style" />
<noscript>
  <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet" type="text/css" />
</noscript>
<link rel="preload" href="https://fonts.googleapis.com/css2?family=Open+Sans&display=swap" as="style" />
<noscript>
  <link href="https://fonts.googleapis.com/css2?family=Open+Sans&display=swap" rel="stylesheet" type="text/css" />
</noscript> -->

<!-- Preload important assets -->
<!-- <link rel="preload" href="/mobile.riv" as="fetch" crossorigin="anonymous" /> -->

<!-- LocalStorage Theme Check -->
<script is:inline>
  function setTheme() {
    if (
      localStorage.getItem('color-theme') === 'dark' ||
      (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)
    ) {
      document.documentElement.classList.add('dark');
    } else {
      document.documentElement.classList.remove('dark');
    }
  }
  setTheme();
  document.addEventListener('astro:after-swap', setTheme);
</script>

<!-- Google Tag Manager -->
<script is:inline>
  if (!window.dataLayer) {
    window.dataLayer = [];
    const script = document.createElement('script');
    script.async = true;
    script.src = 'https://www.googletagmanager.com/gtm.js?id=GTM-MXPGLQ5';
    script.onload = () => {
      // Initialize gtag function
      window.dataLayer = window.dataLayer || [];
      function gtag() {
        window.dataLayer.push(arguments);
      }
      window.gtag = window.gtag || gtag;

      // Set initial consent to denied for everything except necessary
      window.gtag('consent', 'default', {
        analytics_storage: 'denied',
        ad_storage: 'denied',
        ad_user_data: 'denied',
        ad_personalization: 'denied',
      });
    };
    document.head.appendChild(script);
  }
</script>
<!-- End Google Tag Manager -->
