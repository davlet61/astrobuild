---
import { Image } from 'astro:assets';
import type { CollectionEntry } from 'astro:content';
import type { ImageObject } from 'src/types';

export interface Props {
  post: CollectionEntry<'posts'>;
  path: string;
}

const { post, path } = Astro.props;

const getExcerpt = async () => {
  if (!post.data.description) {
    const postContent = post.body
      .replace(/^\s*$(?:\r\n?|\n)/gm, '')
      .split('\n')
      .filter((line) => !line.startsWith('#') && !line.startsWith('['))
      .join(' ');

    return `${postContent.substring(0, 100).trim()}...`;
  }
};

const defaultImage: ImageObject = { src: '/assets/placeholder.jpg', format: 'jpg', width: 1000, height: 667 };

const imageSrc =
  post?.data.featuredMedia?.discriminant === 'image'
    ? post?.data.featuredMedia?.value.asset ?? defaultImage
    : defaultImage;
---

<div
  class="group rounded-3xl border border-gray-100 bg-white bg-opacity-50 p-6 shadow-2xl shadow-gray-600/10 dark:border-gray-700 dark:bg-gray-800 dark:shadow-none sm:p-8"
>
  <div class="relative overflow-hidden rounded-xl">
    <Image
      width={1000}
      height={667}
      alt={post?.data.featuredMedia?.discriminant === 'image' ? post?.data.featuredMedia?.value?.alt ?? '' : ''}
      class="h-64 w-full object-cover object-top transition duration-500 group-hover:scale-105"
      loading="lazy"
      src={imageSrc}
    />
  </div>
  <div class="relative mt-6">
    <h3 class="text-2xl font-semibold text-gray-800 dark:text-white">
      {post.data.title}
    </h3>
    <p class="mb-8 mt-6 text-gray-600 dark:text-gray-300">
      {post.data.description ? <p>{post.data.description}</p> : getExcerpt()}
    </p>
    <a class="inline-block" href={`/${path}/${post.slug}`}>
      <span class="text-info dark:text-blue-300">Les mer</span>
    </a>
  </div>
</div>
