---
import { Image } from 'astro:assets';
import type { Post } from '$tina/__generated__/types';
import PortableText from './PortableText.astro';

export interface Props {
  post: Post;
  path: string;
}

const { post, path } = Astro.props;

const getExcerpt = () => {
  if (!post.description) {
    const postContent = post.body?.children?.find((p:{type: string, children: {text: string}[]}) => p.type === 'p').children[0].text || '';
    return `${postContent.substring(0, 100).trim()}...`;
  }
};
---

<div
  class="group rounded-3xl border border-gray-100 bg-white bg-opacity-50 p-6 shadow-2xl shadow-gray-600/10 dark:border-gray-700 dark:bg-gray-800 dark:shadow-none sm:p-8"
>
  <div class="relative overflow-hidden rounded-xl">
    <Image
      width={1000}
      height={667}
      alt={post?.mainImage?.alt || ''}
      class="h-64 w-full object-cover object-top transition duration-500 group-hover:scale-105"
      loading="lazy"
      src={post?.mainImage?.url || '/assets/placeholder.jpg'}
    />
  </div>
  <div class="relative mt-6">
    <h3 class="text-2xl font-semibold text-gray-800 dark:text-white">
      {post.title}
    </h3>
    <p class="mb-8 mt-6 text-gray-600 dark:text-gray-300">
      {post.description ? <PortableText value={post.description} /> : getExcerpt()}
    </p>
    <a class="inline-block" href={`/${path}/${post.slug}`}>
      <span class="text-info dark:text-blue-300">Les mer</span>
    </a>
  </div>
</div>
